### Experiment B - Fuel1 and Fuel2 interact to produce a slow intermediate that could react downstream.

# DLD_translator_leak_simple.pil

length 1a = 5
length 1b = 10
length 2a = 5
length 2b = 10
length 3a = 2
length 3b = 12
length 3c = 1
length 4a = 2
length 4b = 13

fuel1 = 1b( 2a( 2b( 3a( 3b 3c + )))) 1a*
fuel2 = 2b( 3a( 3b( 3c( 4a( 4b + ))))) 2a*

# uncomment the (end result of leak) structure below if you want to see where it occurs
# FF2 = 1b( 2a( 2b( 3a( 3b( 3c( + 4a* )))) 2a* + 2b( 3a( 3b 3c 4a 4b + )))) 1a*


# this doesn't find anything, of course.  but it's fast.
# ../../enumerator.py --no-max-helix --max-complex-size 6 --max-complex-count 200000 --max-reaction-count 200000 DLD_translator_leak_simple.pil -c -r --release-cutoff-1-1 2

# this is supposed to find something, and it's reasonably fast, but there appears to be a numerical problem with the condensed kinetics
# ../../enumerator.py --no-max-helix --max-complex-size 8 --max-complex-count 200000 --max-reaction-count 200000 DLD_translator_leak_simple.pil -c -r --k-fast 0.001 --release-cutoff-1-1 2

# this emits a warning during condensation, but it completes successfully, and (in detailed mode) it appears to find the expected slow leak structure (with an outgoing rate 0.000935)
# ../../enumerator.py --no-max-helix --max-complex-size 8 --max-complex-count 200000 --max-reaction-count 200000 DLD_translator_leak_simple.pil -r --k-fast 0.001 --release-cutoff-1-1 2 -c
#     kinetic [0.000003 /M/s] fuel1 + fuel2 -> 8158 
#     kinetic [0.000467 /s] 8158 -> fuel1 + fuel2 
#     kinetic [0.000480 /M/s] 8158 + 8158 -> fuel1 + 8158 + fuel2 