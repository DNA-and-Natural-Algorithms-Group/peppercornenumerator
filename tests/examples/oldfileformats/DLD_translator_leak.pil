### Experiment B - Fuel1 and Fuel2 interact to toehold-mediated 3-way displace 3c 3d 4a 4b 4c 5a

# DLD_translator_leak.pil

length 1a = 5
length 1b = 10
length 2a = 5
length 2b = 10
length 3a = 2
length 3b = 3
length 3c = 9
length 3d = 1
length 4a = 2
length 4b = 11
length 4c = 2
length 5a = 2

fuel1 = 1b( 2a( 2b( 3a( 3b 3c 3d + )))) 1a*
fuel2 = 2b( 3a( 3b( 3c( 3d( 4a( 4b 4c + )))))) 2a*

# uncomment the complex below if you want to see the reporter interact with any slow leak intermediate
# FlRep = 3c( 3d( 4a( 4b( 4c( 5a( + )))))) 3b* 3a*

# uncomment the strand below if you want to trigger the reporter directly
# S1 = 3a 3b 3c 3d 4a 4b 4c

# uncomment the (end result of leak) structure below if you want to see where it occurs
# FF2 = 1b( 2a( 2b( 3a( 3b( 3c( 3d + 4a* )))) 2a* + 2b( 3a( 3b 3c 3d 4a 4b 4c + )))) 1a*


# this runs with or without -c, but there is no condensed reaction because in the low-concentration limit, there is no reaction
# ../../enumerator.py --no-max-helix --max-complex-size 6 --max-complex-count 200000 --max-reaction-count 200000 DLD_translator_leak.pil -c -r

# this runs with or without -c, but there is no condensed reaction here either... k_fast = 0.0002 does not catch the intended intermediate?  oops, no, it doesn't.
# ../../enumerator.py --no-max-helix --max-complex-size 6 --max-complex-count 200000 --max-reaction-count 200000 DLD_translator_leak.pil -r --k-fast 0.0002 -c

# FF2 changes to FF1.5 with rate 0.000935  ... that's what we want to catch as a "slow" unimolecular reaction
# ../../enumerator.py --no-max-helix --max-complex-size 6 --max-complex-count 200000 --max-reaction-count 400000 DLD_translator_leak.pil -r --k-fast 0.001 -c
#    kinetic [0.000004 /M/s] fuel1 + fuel2 -> 44559 
#    kinetic [0.000467 /s] 44559 -> fuel1 + fuel2 

# note that max-complex-size 8 would be desirable, but the above exceeds the max reaction count and doesn't complete the condensing step in a day, in that case.

